// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64-apple-ios13.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name AWHOilSwift
// swift-module-flags-ignorable: -no-verify-emitted-module-interface -interface-compiler-version 6.1.2
@_exported import AWHOilSwift
import DGCharts
import Foundation
import Swift
import UIKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@objc open class AWHOSOverallLineMarkerView : AWHOilSwift.AWHOSBalloonMarker {
  @objc open var details: Swift.Array<AWHOilSwift.AWHOSOverallLineModel>?
  @objc public init(color: UIKit.UIColor, font: UIKit.UIFont, textColor: UIKit.UIColor, borderColor: UIKit.UIColor, borderWidth: CoreFoundation.CGFloat, precision: Swift.Int, insets: UIKit.UIEdgeInsets, details: Swift.Array<AWHOilSwift.AWHOSOverallLineModel>?)
  @objc override open func refreshContent(entry: DGCharts.ChartDataEntry, highlight: DGCharts.Highlight)
  @objc deinit
}
@objc open class AWHOSTemperatureChartMarker : DGCharts.MarkerImage {
  @objc open var color: UIKit.UIColor
  @objc open var arrowSize: CoreFoundation.CGSize
  @objc open var font: UIKit.UIFont
  @objc open var textColor: UIKit.UIColor
  @objc open var insets: UIKit.UIEdgeInsets
  @objc open var minimumSize: CoreFoundation.CGSize
  @objc open var borderColor: UIKit.UIColor
  @objc open var borderWidth: Swift.Double
  @objc public init(color: UIKit.UIColor, font: UIKit.UIFont, textColor: UIKit.UIColor, borderColor: UIKit.UIColor, borderWidth: CoreFoundation.CGFloat, insets: UIKit.UIEdgeInsets)
  @objc override open func offsetForDrawing(atPoint point: CoreFoundation.CGPoint) -> CoreFoundation.CGPoint
  @objc override open func draw(context: CoreGraphics.CGContext, point: CoreFoundation.CGPoint)
  @objc override open func refreshContent(entry: DGCharts.ChartDataEntry, highlight: DGCharts.Highlight)
  @objc open func setLabel(_ newLabel: Swift.String)
  @objc deinit
}
@objc open class AWHOSBalloonMarker : DGCharts.MarkerImage {
  @objc open var color: UIKit.UIColor
  @objc open var arrowSize: CoreFoundation.CGSize
  @objc open var font: UIKit.UIFont
  @objc open var textColor: UIKit.UIColor
  @objc open var insets: UIKit.UIEdgeInsets
  @objc open var minimumSize: CoreFoundation.CGSize
  @objc open var borderColor: UIKit.UIColor
  @objc open var borderWidth: Swift.Double
  @objc open var type: Swift.Int
  @objc open var precision: Swift.Int
  @objc public init(color: UIKit.UIColor, font: UIKit.UIFont, textColor: UIKit.UIColor, borderColor: UIKit.UIColor, borderWidth: CoreFoundation.CGFloat, type: Swift.Int, precision: Swift.Int, insets: UIKit.UIEdgeInsets)
  @objc override open func offsetForDrawing(atPoint point: CoreFoundation.CGPoint) -> CoreFoundation.CGPoint
  @objc override open func draw(context: CoreGraphics.CGContext, point: CoreFoundation.CGPoint)
  @objc override open func refreshContent(entry: DGCharts.ChartDataEntry, highlight: DGCharts.Highlight)
  @objc open func setLabel(_ newLabel: Swift.String)
  @objc deinit
}
@objc open class AWHOSXYMarkerView : AWHOilSwift.AWHOSBalloonMarker {
  @objc open var xAxisValueFormatter: (any DGCharts.AxisValueFormatter)?
  @objc public init(color: UIKit.UIColor, font: UIKit.UIFont, textColor: UIKit.UIColor, borderColor: UIKit.UIColor, borderWidth: CoreFoundation.CGFloat, type: Swift.Int, precision: Swift.Int, insets: UIKit.UIEdgeInsets, xAxisValueFormatter: any DGCharts.AxisValueFormatter)
  @objc override open func refreshContent(entry: DGCharts.ChartDataEntry, highlight: DGCharts.Highlight)
  @objc deinit
}
@objc open class AWHOSOilLandXYMarkerView : AWHOilSwift.AWHOSBalloonMarker {
  @objc open var details: Swift.Array<AWHOilSwift.AWHOSQuantityStatisticsDetailsModel>?
  @objc public init(color: UIKit.UIColor, font: UIKit.UIFont, textColor: UIKit.UIColor, borderColor: UIKit.UIColor, borderWidth: CoreFoundation.CGFloat, type: Swift.Int, precision: Swift.Int, insets: UIKit.UIEdgeInsets, details: Swift.Array<AWHOilSwift.AWHOSQuantityStatisticsDetailsModel>?)
  @objc override open func refreshContent(entry: DGCharts.ChartDataEntry, highlight: DGCharts.Highlight)
  @objc deinit
}
@objc open class AWHOSTemperatureChartMarkerView : AWHOilSwift.AWHOSTemperatureChartMarker {
  @objc open var details: Swift.Array<AWHOilSwift.AWHSSTemperatureHumidityDetailsModel>?
  @objc open var typeArr: Swift.Array<AWHOilSwift.AWHSSQuantityStatisticsQueryCfgModel>?
  @objc public init(color: UIKit.UIColor, font: UIKit.UIFont, textColor: UIKit.UIColor, borderColor: UIKit.UIColor, borderWidth: CoreFoundation.CGFloat, insets: UIKit.UIEdgeInsets, details: Swift.Array<AWHOilSwift.AWHSSTemperatureHumidityDetailsModel>?, typeArr: Swift.Array<AWHOilSwift.AWHSSQuantityStatisticsQueryCfgModel>?)
  @objc override open func refreshContent(entry: DGCharts.ChartDataEntry, highlight: DGCharts.Highlight)
  @objc deinit
}
